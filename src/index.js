#!/usr/bin/env node

const prettyMilliseconds = require('pretty-ms'),
  { performance } = require('perf_hooks'),
  escodegen = require('escodegen'),
  acorn = require('acorn'),
  chalk = require('chalk'),
  path = require('path'),
  fs = require('fs')

const Transformers = require('./transformers')

const rt_0x12c0 = [
  'dropdown',
  'zoPuy',
  'XVtMo',
  'tNFlE',
  'Enables the indicator window',
  'bVnRJ',
  'INT_DamageOverride',
  'GetEyePosition',
  'joy_advanced',
  'NdBWW',
  'YoapQ',
  'tbPwz',
  'Overrides your minimal damage',
  'Title',
  'BOOL_AutomatedSlowWalkSide',
  'bVGiZ',
  'ElRMo',
  'GetRenderOrigin',
  'upper chest',
  'split',
  'JqztU',
  'tsjAa',
  'Rect',
  'generic',
  'uSqTn',
  'bMBWt',
  'MvHkw',
  'FilledRect',
  'Fluctuate',
  'RdvPi',
  'PmFmh',
  'AONRc',
  'goJCR',
  'home',
  'APLJg',
  'tUjye',
  'HQUyL',
  'left upper arm',
  'UwTgH',
  'QQGZD',
  'VzxQC',
  'AEWCG',
  'ObMIP',
  'AwCfM',
  'uUhLE',
  'gLjOk',
  'GetHitboxPosition',
  'Faster Doubletap',
  'Default',
  'kmlZi',
  'xGYMF',
  'DROP_AntiAimArrows',
  'Watermark',
  'AWP Damage',
  'srTuz',
  'QUVHA',
  'CreateMove',
  'FPKOq',
  'PowHI',
  'iEnTi',
  'MyQzo',
  'SyFZU',
  'gFalC',
  'clamp',
  'General',
  'Beta',
  'LIVE',
  'jLQOp',
  'Time',
  'CYbpB',
  'end',
  'Self Learning',
  'LPuUP',
  'uJdAf',
  'Null',
  'DvJoh',
  'Recharges your doubletap faster',
  'GZLQf',
  'NmNiQ',
  'toString',
  'SiVSE',
  'ctrl',
  'kdSOs',
  'ClickedDeltaPos',
  'DROP_RagebotLogs',
  'Configuration loaded successfuly.',
  'BOxqC',
  'charCodeAt',
  'CgfJO',
  'toLowerCase',
  'UEqUj',
  'IsKeyPressed',
  'cKOWA',
  'zBXkI',
  'muyZL',
  'ActiveTab',
  'ElementBackground',
  'Draw',
  'FuyiW',
  'Unload',
  'jaf.lggdk',
  'HtJRs',
  'YSuks',
  'xVVhw',
  'Ragebot',
  'Entity',
  'ePpoP',
  'KqHvn',
  'FdAgG',
  'Bkouj',
  'stomach',
  'back',
  'Lines',
  'LjJwq',
  'eDfQd',
  'FyTaj',
  'alt',
  'SmyyX',
  'vjbRi',
  'vgvcq',
  'hcboz',
  'qZSJz',
  'HLfgO',
  'EQHiA',
  'Goslm',
  'TSQuy',
  'WGqgX',
  'qDqCC',
  'nHbRP',
  'fLNBi',
  'RYYos',
  'Regular',
  'distance',
  'Bvxxg',
  'GetProp',
  'kuYRo',
  'Ercbd',
  'hYnPA',
  'nuNZI',
  'yDTUg',
  'pqaNa',
  'imal',
  'DGGlS',
  'CZtjl',
  'qiQJz',
  'lEocV',
  'Anti-Aim Arrows',
  'right calf',
  'DrawFRAMEWORK',
  'sFdHu',
  'KVtfQ',
  'Configuration reset.',
  'm_iHealth',
  'rarjo',
  'vmcVs',
  'fSKOP',
  'ZNaBa',
  'pDdDa',
  'dzxIK',
  'Text',
  'fromCharCode',
  'cagiT',
  'nkMPa',
  'CeuXC',
  'Scout Damage',
  'Direction Offset',
  'tMHTA',
  'ERROR > It appears that no configuration was ever saved (',
  'rbgBr',
  'uIGZg',
  'BOOL_FasterDoubletap',
  'GetCursorPosition',
  'IfGMx',
  'SQYDk',
  'zrwsH',
  'zFpgP',
  'r_eyegloss',
  'Menu',
  'vjUpb',
  'wCErR',
  'FOnTb',
  'DHgda',
  'parse',
  'Health',
  'ExecuteCommand',
  'PwvWD',
  'csOCd',
  'Ktxoe',
  'stringify',
  'NbDES',
  'PxUGt',
  'ElementsOuter',
  'left foot',
  'Switches your real angle',
  'kixAN',
  'mTSDx',
  'max',
  'MFiin',
  'feSrf',
  'gCiGU',
  'PvbxJ',
  "Overrides how many ticks you'll shift",
  'JFHUK',
  'Forces safe point on extremities',
  'IsDormant',
  'xGQCC',
  'Side',
  'Auto Direction',
  'bxbAn',
  'vTjom',
  'DwUcy',
  'gdhMM',
  'jNgOp',
  'Print',
  'pelvis',
  'IrwEr',
  'cdwwe',
  'esyBG',
  'dRIBY',
  'TPrkx',
  'nbqZP',
  'body',
  'TUpZZ',
  'StoredTime',
  'SjCmd',
  'sqrt',
  'None',
  'ecgUV',
  'm_vecVelocity[0]',
  'TKrRy',
  'Force Safety',
  'button',
  'Dghtx',
  'WSqqj',
  'CFJVU',
  'xgFvE',
  'uMzdR',
  'YLiWn',
  'KNiWm',
  'KEY_MatchmakingFakeDuck',
  'KGLxB',
  'TextSize',
  'ztvLP',
  'WAnhU',
  'ujNen',
  'ecwgh',
  'BTN_ResetConfig',
  'gQHWO',
  'Visuals',
  'qyMLe',
  'UikvK',
  'CdHEz',
  'GryJf',
  'SkSOC',
  'udbUs',
  'JBKEa',
  'CQIOt',
  'Testing',
  'INT_ShiftOverride',
  'rOwdo',
  'GKGEt',
  'esc',
  'tahoma.ttf',
  'Side Switch',
  'TAmpg',
  'XYFjj',
  'left forearm',
  'yrfhd',
  'Self learning',
  'WDcBe',
  'DQnZz',
  'round',
  'zdkFT',
  'Menu hotkey',
  'YTfno',
  'keys',
  'HZwOb',
  'qntFg',
  'FfNAu',
  'flDOL',
  'UpnJD',
  'Low Delta',
  'Anti-Aim Preset',
  'zBzNg',
  'wYGKz',
  'emptySlider',
  'oFmwC',
  'ret',
  'AWCbJ',
  'BETA',
  'VTQSx',
  'zxUre',
  'Origin',
  'pYOfT',
  'BTN_SaveConfig',
  'lJzEu',
  'hnkQK',
  'ClickedPos',
  'HFsDP',
  'ZvExj',
  'ZgFcK',
  'BOOL_EnableAutowallDamage',
  'AMVCl',
  'checkbox',
  'Anti-Height Advantage',
  'YHtXh',
  'Adaptive Doubletap',
  'zBfQKyac',
  'uatMh',
  'OSXgM',
  'MonBF',
  'Bsrby',
  'LastPosition',
  'BhdZt',
  'yFxho',
  'prototype',
  'VCJLC',
  'kuPSy',
  'aQLpg',
  'YTPkW',
  'm_flDuckAmount',
  'GetLocalPlayer',
  'VeQHk',
  'VDCsy',
  'MSKae',
  'wnXGX',
  'jilHt',
  'Active',
  'Automated Slow Walk Side',
  'ewAgh',
  'YAwvA',
  'PRaEX',
  'GetViewAngles',
  'Autowall minimal damage',
  'pdwn',
  'HZXsm',
  'xNTQh',
  'Owdugew tsuc ',
  '20201008',
  'substring',
  'VWLec',
  'EWOUE',
  'PrintColor',
  ' [LIVE] - ',
  'left hand',
  'OUBFM',
  'Frametime',
  'Load Config',
  'hotkey',
  'ffsig',
  'dWYGZ',
  'nyPXx',
  'MM Fake Duck',
  'clr',
  'Prevents height advantage',
  'DROP_FakeLagPresets',
  'AoNuu',
  'nFaYQ',
  'FuJWS',
  'EEeBb',
  'xjHpm',
  'RRSvY',
  'CBasePlayer',
  'atan',
  'Tickrate',
  'SetValue',
  'PJlPz',
  'Focused',
  'dOcAn',
  'Elements',
  'AatFF',
  'random',
  'fWStZ',
  'uhuWD',
  'MvUOb',
  'QrOgT',
  'DROP_AntiAimPresets',
  'oeQye',
  'Distance',
  'INT_AutoDirectionOffset',
  'SmBPT',
  'cBWgK',
  'Fake',
  'Saves your configuration',
  'FeToH',
  'match',
  'Fake Lag Preset',
  'uxQkv',
  'Other',
  'wobrX',
  'yhzrf',
  'MQLPC',
  'MbTBH',
  'DyOJm',
  'left thigh',
  'eummy',
  'vbpnK',
  'CTRup',
  'XVLnd',
  'Ezgew',
  'pause',
  'PJMWK',
  'PaTTw',
  'pdarj',
  'sABRb',
  'xvFGu',
  'LyYFp',
  'JzVyy',
  'floor',
  'GaZNU',
  'dZrMs',
  'KLhEy',
  'uGCUR',
  'qQINi',
  'ElzPR',
  'obLiO',
  'Auto Damage',
  'uyWgP',
  'GjThi',
  'Offset',
  'Helpers',
  'LpQoZ',
  'LtazG',
  'Adaptive',
  'BOOL_AdaptiveDoubletapType',
  'Finds the best position for your real angle',
  'ERoIQ',
  'rfMeE',
  'InAir',
  'IZLIe',
  'UpdateData',
  'gHOfs',
  'MLplz',
  'GgJel',
  'NphPT',
  'IsOpen',
  'JqGVN',
  'BOOL_Indicators',
  '...',
  'RegisterCallback',
  'bOOSG',
  'mSipO',
  'Mtduj',
  'BOOL_AutoDirection',
  'rdIbh',
  'BOOL_RapidDoubletap',
  'MBkHE',
  'BQaCC',
  'length',
  'caps',
  'qsLOU',
  'rdSWv',
  'TRgCC',
  'hfrWo',
  'Ahyjh',
  'OxCIo',
  'Normal',
  'KUnRz',
  'lPdfB',
  'CoFlI',
  'SetClanTag',
  'JZlXe',
  'KEY_DamageOverride',
  'BTN_SetClantag',
  'slider',
  'AnsCc',
  'LiBpZ',
  'Clantag changer',
  'cOBwr',
  'TyJdC',
  'QiMkX',
  'lnfIo',
  'BOOL_AntiAim',
  'IsVdT',
  'Real',
  'eDxUZ',
  'left calf',
  'jSRiP',
  'rSWie',
  'NKzCV',
  'JIQDU',
  '11|7|1|12|5|4|0|3|9|6|8|2|10',
  'PBfvM',
  'UWwdD',
  'Resets your configuration',
  'Configuration saved successfully.',
  'DuckAmount',
  'srOTb',
  'sAVZK',
  'mUFZD',
  'GetUsername',
  'BOOL_Ragebot',
  'jpMiG',
  'JOmVU',
  'JTLeA',
  'LDWsd',
  'Shifting',
  'vooIs',
  'tab',
  'SHNnf',
  'right forearm',
  'ztUPs',
  'wPqaG',
  'IAABC',
  'hJobV',
  'leg',
  'sjchS',
  'shift',
  'BGsML',
  'uZOVg',
  'oTnnn',
  'uvakE',
  'wpal',
  'Instant doubletap for short & regular for long distance',
  'EZNuK',
  'nFerW',
  'pDTMP',
  'Forces doubletapping on non-sniper weapons',
  'Btlrp',
  'FUNhb',
  'ChiEg',
  'cZLWT',
  'KEY_MainWindow',
  'vvixC',
  'INT_PreventHeightAdvantageDistance',
  'PLadn',
  'UNwZl',
  'mhKnp',
  'YFdJn',
  'pdxpd',
  'WCqrb',
  'JyTnk',
  'vAScA',
  'oKJlu',
  'Client',
  'LlOWT',
  'fHjVL',
  'sDezF',
  'BTN_LoadConfig',
  'rENpI',
  'Health Based',
  'IsAlive',
  'Reset Config',
  'INT_AutoAutowallDamage',
  'szMey',
  'mKwop',
  'Igvpm',
  'jouZq',
  'right upper arm',
  'wOBvj',
  'yMUrE',
  'IsBeingDragged',
  'UxtPZ',
  'NrvBx',
  'rAOzF',
  'BOOL_PreventHeightAdvantage',
  'cncl',
  'DhCTm',
  'FpUzU',
  'Yrrpx',
  'AddFont',
  'Sets your clantag to "rin.tools"',
  'SLKpn',
  'qfNTw',
  'FLvJJ',
  'BOOL_ForceSafetyOnExtremities',
  'uMiah',
  'KrBwB',
  'YhgWg',
  'GetString',
  'GetFakeYaw',
  'zgkl_ojalwugfxay',
  'zkizu',
  'AqreR',
  'laXWY',
  'QotHN',
  'GetServerString',
  'KEY_AntiAimSideSwitch',
  'Switch',
  'Background',
  'kyhuL',
  '11|10|2|0|7|8|3|6|1|5|4|9',
  'WFuNL',
  'qdgpzp0',
  'zWHQd',
  'qfRjP',
  'myztJ',
  'aAKjO',
  'ISVUQ',
  'thorax',
  'AqqvW',
  'duoXB',
  'VGJuu',
  'tRuDW',
  'Loads your configuration',
  'pRKPe',
  'AxHrI',
  'zuEpP',
  'YZqxu',
  'chest',
  'SetString',
  'OWups',
  'Groupbox',
  'TEmUo',
  'tPFCM',
  'neck',
  'HHUCz',
  'BOOL_AngleLogging',
  'GetEnemies',
  'evpHj',
  ' - ',
  'fulHE',
  'Set Clantag',
  'AuJLm',
  'true',
  'vNuSI',
  'hypot',
  'Ziicm',
  'FiquaQiM',
  'XAzir',
  'EUrKD',
  'hxhtw',
  'kfkVQ',
  'TTzzT',
  'NNZBu',
  'ERROR > Failed to parse the configuration.',
  'TZcOG',
  'Mltef',
  'getTime',
  'mdWNjQxO',
  'PXgNg',
  'TThOy',
  'lRbJj',
  'Rlupc',
  'vOXJH',
  'FAFgI',
  'High Delta',
  'Header',
  'Enable',
  'eoeNh',
  'Line',
  'head',
  'LAxTw',
  'vKqlQ',
  'MVpPD',
  'space',
  'BhZUuPCg',
  'pup',
  '[jaf.lggdk] ',
  'right thigh',
  'YKnCm',
  'oUnXY',
  'RhqZD',
  'Ragebot Logs',
  'Misc.',
  'PhUsP',
  'Required distance between you and the target',
  'arm',
  'VVEnw',
  'FLadt',
  'Anti-Aim',
  'fHYJn',
  'wPIEj',
  'min',
  'DNYMt',
  'rCerj',
  'JqAZO',
  'espUt',
  'ForceCursor',
  'GetScreenSize',
  'Save Config',
  'BSBmQ',
  'Autowall Damage',
  'vvAWw',
  'GetRealYaw',
  'zrBXu',
  'aBleq',
  'glZOM',
  'off',
  'String',
  'QFzli',
  'WyDch',
  'hGZXZ',
  'Rapid Doubletap',
  'qMxkc',
  'del',
  'eAlFs',
  'right hand',
  'OGIDr',
  'clear',
  'UnloadFRAMEWORK',
  'pvdyN',
  'oNYpt',
  'rwmOR',
  'EKubV',
  'vHXKS',
  'Bwiss',
  'Indicators',
  'sAfjz',
  'undefined',
  'aOjtt',
  'crosshair',
  'FUtKw',
  'dBWXd',
  'mjbft',
  'IHKSR',
  'kNzPc',
  'AdtIL',
  'INT_AWPAutowallDamage',
  'AFBpa',
  'fov',
  'xeLda',
  'right foot',
  'INT_ScoutAutowallDamage',
  'SEKLp',
  'push',
  'Advanced',
  'VjvXn',
  'GradientRect',
  'MOqsZ',
  'Damage Override',
  'cRPgE',
  'Shift Override',
  'oxGrM',
  'juaXj',
  'Fake duck for Valve dedicated servers',
  'pMrOm',
  'BOOL_Visuals',
  'Element',
  'DNLww',
]
;(function (_0x1f6a27, _0x12c026) {
  const _0x100135 = function (_0x5c1536) {
    while (--_0x5c1536) {
      _0x1f6a27['push'](_0x1f6a27['shift']())
    }
  }
  _0x100135(++_0x12c026)
})(rt_0x12c0, 232)
const rt_0x1001 = function (_0x1f6a27, _0x12c026) {
  _0x1f6a27 = _0x1f6a27 - 0
  var _0x100135 = rt_0x12c0[_0x1f6a27]
  return _0x100135
}

var PAC = function (_0x51fd25, _0x3dbc13) {
  const _0x478294 = {
    goJCR: function (_0x14ba84, _0x4330c1) {
      return _0x14ba84 - _0x4330c1
    },
    rSWie: function (_0x39a23c, _0x580ee8) {
      return _0x39a23c + _0x580ee8
    },
    udbUs: function (_0x268dda, _0x10681b) {
      return _0x268dda < _0x10681b
    },
    yhzrf: 'TyJdC',
    qntFg: function (_0x2c537b, _0x8b6dae) {
      return _0x2c537b <= _0x8b6dae
    },
  }
  if (_0x3dbc13 < 0) return PAC(_0x51fd25, _0x478294['rSWie'](_0x3dbc13, 26))
  var _0x4e51b6 = ''
  for (
    var _0x586b15 = 0;
    _0x478294['udbUs'](_0x586b15, _0x51fd25['length']);
    _0x586b15++
  ) {
    if ('TyJdC' === _0x478294['yhzrf']) {
      var _0x4c06ae = _0x51fd25[_0x586b15]
      if (_0x4c06ae['match'](/[a-z]/i)) {
        if ('YHtXhFUNhb') {
          var _0x347710 = _0x51fd25['charCodeAt'](_0x586b15)
          if (_0x347710 >= 65 && _0x478294['qntFg'](_0x347710, 90))
            _0x4c06ae = String['fromCharCode'](
              ((_0x478294['goJCR'](_0x347710, 65) + _0x3dbc13) % 26) + 65
            )
          else {
            if (_0x347710 >= 97 && _0x478294['qntFg'](_0x347710, 122))
              _0x4c06ae = String['fromCharCode'](
                ((_0x347710 - 97 + _0x3dbc13) % 26) + 97
              )
          }
        } else {
          function _0x1d516a() {
            ;(_0x2900a0 = _0x33bc74),
              (_0x8a8e9d['Entity'] = _0x2f804e[_0x4e425d])
          }
        }
      }
      _0x4e51b6 += _0x4c06ae
    } else {
      function _0x1d8c7d() {
        ;(_0x198296[_0x5dcd82][3] = !![]),
          (_0x15fcae[_0x4fce37][0] = (_0x1534ae['x'] - _0xc5a4d7)['clamp'](
            0,
            _0x478294['goJCR'](_0x2ebb8c, 4)
          )),
          (_0x233d44[_0x3419e2][1] = _0x59e579['round'](
            _0x478294['rSWie'](
              _0x2f1c5d[_0x561684][0] * ((_0x5ecab2 - _0x199818) / 100),
              _0x355e56
            )
          ))
      }
    }
  }
  return _0x4e51b6
}

const rt_0x592a = [
  'ntoaE',
  'INT_AutoDirectionOffset',
  'fov',
  'akwgt',
  'TwpmP',
  'UnloadRT01',
  'xqaoN',
  'EllPf',
  'attacker',
  'npJRt',
  'GetEyePosition',
  'headshot',
  'GetGameRulesProxy',
  'fkApK',
  'zafya',
  'BOOL_AntiAim',
  'BOOL_AutomatedSlowWalkSide',
  'OtXHl',
  'YiwUT',
  'Bullet',
  'Fluctuate',
  'AYOUb',
  'General',
  'fbgIH',
  'Side',
  'GetButtons',
  'fNAXN',
  'LGkvL',
  'GOuOV',
  'xErWt',
  'userid',
  'MApaj',
  'Send',
  'cWFbw',
  'High Delta',
  'CreateMove',
  'HUzMH',
  'jbYHp',
  'Rage',
  'zXGCN',
  'Line',
  'undefined',
  'bGVQR',
  'ceil',
  'KcIOE',
  'nzaQa',
  'qIdpE',
  'qCxKO',
  'HNEIJ',
  'BOOL_PreventHeightAdvantage',
  'Entity',
  'DprTo',
  'kFBgz',
  'qMStf',
  'xzBBE',
  'CCSGameRulesProxy',
  'SetLBYOffset',
  'Enabled',
  'Fake',
  'DNeGi',
  'UMleH',
  'QvXHs',
  'IsAlive',
  'player_death',
  'VoTSl',
  'PlayerDeathRT01',
  'rxqFe',
  'yBKjK',
  'DidCycle',
  'Shifting',
  'cos',
  'KlUqq',
  'GetProp',
  'SpDdL',
  'DyEzN',
  'PuyIE',
  'Low Delta',
  'SetOverride',
  'zjkMJ',
  'SetButtons',
  'qxJuY',
  'Origin',
  'TickInterval',
  'geTet',
  'Unload',
  'RegisterCallback',
  'Time',
  'OQYUz',
  'QfIBk',
  'nsXVf',
  'AOWgZ',
  'SmbNI',
  'DROP_AntiAimPresets',
  'Lby',
  'THMET',
  'ANusM',
  'vOvUQ',
  'tTfKn',
  'Tickcount',
  'ZFIEk',
  'KPEan',
  'BCCKE',
  'YuIBa',
  'CEMKt',
  'INT_PreventHeightAdvantageDistance',
  'KEY_MatchmakingFakeDuck',
  'Udwyl',
  'oxEEq',
  'RdUul',
  'Default',
  'RzMec',
  'GetRenderOrigin',
  'TUJru',
  'jqKic',
  'yodHJ',
  'xLtwo',
  'push',
  'SetValue',
  'IYRSX',
  'LEnRa',
  'tEJfh',
  'WNeWC',
  'SetFakeOffset',
  'ZdXQz',
  'GetHitboxPosition',
  'vDAAg',
  'GetInt',
  'EisNL',
  'QLsoo',
  'wlKsy',
  'ZcvfC',
  'WfFSD',
  'rUhof',
  'Choke',
  'hfvyX',
  'sktvq',
  'NKLqn',
  'Hxfhx',
  'FIZsV',
  'BOOL_AutoDirection',
  'BbOHu',
  'None',
  'vIAhM',
  'ObLCq',
  'Real',
  'PaUcP',
  'kMWab',
  'hgStV',
  'Fake Lag',
  'Uwdpe',
  'ZtZJL',
  'EFVYW',
  'min',
  'EOTMS',
  'SetRealOffset',
  'CreateMoveRT01',
  'Adaptive',
  'DuckAmount',
  'ChokedCommands',
  'Switch',
  'GQlkZ',
  'm_bIsValveDS',
  'Angles',
  'HVbWt',
  'NPbDx',
  'sin',
  'nFFFv',
  'BOOL_AngleLogging',
  'GetEntityFromUserID',
  'giiHo',
  'HUCHs',
  'REEmh',
  'distance',
  'DROP_FakeLagPresets',
  'xOxsI',
  'yaUbs',
]
;(function (_0x32fc3a, _0x592a9e) {
  const _0x974733 = function (_0x315b50) {
    while (--_0x315b50) {
      _0x32fc3a['push'](_0x32fc3a['shift']())
    }
  }
  _0x974733(++_0x592a9e)
})(rt_0x592a, 314)
const rt_0x9747 = function (_0x32fc3a, _0x592a9e) {
  _0x32fc3a = _0x32fc3a - 0
  var _0x974733 = rt_0x592a[_0x32fc3a]
  return _0x974733
}

const rt_0x4046 = [
  'pEkNp',
  'shift',
  'awp',
  'sPCqj',
  'MyBfB',
  'MZtOc',
  'GetInt',
  'GKhUn',
  'split',
  ' damage',
  'BZaVJ',
  'PEUHz',
  'userid',
  'hitbox',
  'OverrideTolerance',
  'INT_AWPAutowallDamage',
  'WAjPP',
  'KoLbS',
  'vNQBK',
  'RagebotFireRT02',
  'jxLDH',
  'kEDFq',
  'yKPSe',
  'INT_ScoutAutowallDamage',
  'CreateMove',
  'EnableRecharge',
  'm_angEyeAngles[0]',
  'dYcAM',
  'RegisterCallback',
  'EJoAY',
  'Unload',
  'OverrideShift',
  'TickInterval',
  'NbcMS',
  'Rage',
  'kkPzT',
  'Origin',
  'g3sg1',
  'BOOL_EnableAutowallDamage',
  'DROP_RagebotLogs',
  'IsAlive',
  'bYiGn',
  'ragebot_fire',
  'mEXNj',
  'GJyxD',
  'ndTNg',
  'Hitbox',
  'distance',
  'bWPER',
  'KPSHa',
  'INT_DamageOverride',
  'TWTSD',
  'GetValue',
  'KEY_DamageOverride',
  'player_hurt',
  'IHKgW',
  'ZXROW',
  'HLNeg',
  'sRekN',
  'BOOL_ForceSafetyOnExtremities',
  'Draw',
  'NrFLM',
  'Normal',
  'Humko',
  ' - ShotData: [',
  'CreateMoveRT02',
  'UMWrN',
  'attacker',
  'RBEYx',
  'Options',
  'scar 20',
  'String',
  'Keys',
  'ocamt',
  'qaxdM',
  'MatxB',
  'INT_AutoAutowallDamage',
  'mohgb',
  'GetEntityFromUserID',
  'CzgGS',
  'Tick',
  'EOzLe',
  '0|1|4|5|3|2',
  'vaJDY',
  'GetProp',
  'GetHitboxPosition',
  'Exploits',
  'Doubletapped in ',
  'INT_ShiftOverride',
  'Glvte',
  'ForceHitboxSafety',
  'eYFaZ',
  'yQLHy',
  'Recharge',
  'UvdqG',
  'CCSPlayer',
  'GoAox',
  'FdOgp',
  'BOOL_AdaptiveDoubletapType',
  'BOOL_FasterDoubletap',
  'BOOL_RapidDoubletap',
  'PlayerHurtRT02',
  'length',
  'daHjQ',
  'GetName',
  'BDlag',
  ' for ',
  'Hit ',
  'Element',
  'Bullet',
  'DisableRecharge',
  'Fvbhb',
  'zcuWg',
  'm_flNextPrimaryAttack',
  'None',
  'OverrideMaxProcessTicks',
  'm_flNextAttack',
  'GetRenderOrigin',
  'm_nTickBase',
  'blvch',
  'cpqrV',
  'GetEyePosition',
  'target_index',
  'NwruB',
  'HOMDB',
  'CBaseCombatWeapon',
  'fdoYo',
  'WpWeP',
  'nGHmk',
  'SsvRY',
  'vZCZS',
  'uPovT',
  'EKzLB',
  'qzetb',
  'GetWeapon',
  'eqpux',
  'eccvZ',
  'Velocity',
  'ForceTargetMinimumDamage',
  'BOOL_Ragebot',
  'VAxCJ',
  'eXVqG',
  'aQIFK',
  'zaSJx',
  'Tickcount',
  'dmg_health',
  'pvNsQ',
  'Double tap',
  'GetLocalPlayer',
  'Angles',
  'crosshair',
  'ZjYBs',
  'SyecX',
  'VPses',
  'SiOlb',
  'Time',
  'hitgroup',
  'UnloadRT02',
  'PlfnG',
  'GetTarget',
  'toFixed',
  'WUgvC',
  'nNodh',
  'FSxlo',
  'General',
  'Entity',
  'SetValue',
  'ciMhX',
  'RdWIG',
  'VIQdj',
  'ssg 08',
  ' in ',
  'GetCharge',
  'DrawRT02',
  'rClHv',
  'EhSyq',
  'ZkzvC',
  '[jaf.lggdk]',
  'CqIpb',
]
;(function (_0x39475c, _0x404614) {
  const _0x317f85 = function (_0x5e40e1) {
    while (--_0x5e40e1) {
      _0x39475c['push'](_0x39475c['shift']())
    }
  }
  _0x317f85(++_0x404614)
})(rt_0x4046, 340)
const rt_0x317f = function (_0x39475c, _0x404614) {
  _0x39475c = _0x39475c - 0
  var _0x317f85 = rt_0x4046[_0x39475c]
  return _0x317f85
}

const rt_0x2c72 = [
  'jwtYb',
  'IHMeH',
  'wrwHv',
  'efqWg',
  'RegisterCallback',
  'split',
  'xMZWZ',
  'String',
  'uDpvl',
  'Idmcy',
  'FtaWe',
  'ZBlrr',
  'BOOL_Visuals',
  'AGGAI',
  'Crrqi',
  'qxlgR',
  'WuuDO',
  'BUjPU',
  'DROP_AntiAimArrows',
  'gSnKu',
  'TYuWv',
  'Health',
  'nEumx',
  'ZvqNi',
  '3|2|0|5|4|1',
  'nshMQ',
  'GBPWg',
  'OdSwd',
  'ixcbB',
  'kimcx',
  'rwnEN',
  'yJdmY',
  'VrGGU',
  'KEY_DamageOverride',
  'Health Based',
  'zcqjk',
  'swdSP',
  'yOvKq',
  'ilSmR',
  'ITXFt',
  'oNcyA',
  'toFixed',
  'Choke',
  'sFnrE',
  'xboUa',
  'INT_DamageOverride',
  'Grgll',
  'tCpfp',
  'NLpNo',
  'Charge',
  'DrawRT03',
  'BhtZO',
  'Side',
  'KLpVT',
  'leVIp',
  'PmCPO',
  'Arrows',
  'xqYar',
  'GcKUL',
  'Regular',
  'ghosi',
  'zBYtS',
  'ChokedCommands',
  'aWwuR',
  'SFgKJ',
  'IsAlive',
  'iKGQx',
  'RrajL',
  'eceqL',
  '2|5|0|4|3|1',
  'IeEOQ',
  'RVgWc',
  'yntdL',
  'dtcVT',
  'WKovF',
  'ODKcu',
  'Line',
  'DYiPe',
  'SJMLm',
  'Element',
  'tPPkg',
  'niRCO',
  'dFOyU',
  'MjCVh',
  'ygbyB',
  'dSuTC',
  'SLAHZ',
  'VIIqj',
  'CUzfN',
  'AUPnZ',
  'Entity',
  'xZfFA',
  'KVDVu',
  'phcWV',
  'Dgkka',
  'VczfU',
  'nInVx',
  'YZDgW',
  'lSRiL',
  'nihtJ',
  'euxQY',
  'GetCharge',
  'RNcFD',
  'YFInJ',
  'AhIan',
  'GqpPk',
  'ENnno',
  'xiJSM',
  'OfXnC',
  'GetServerString',
  'Quiek',
  'Draw',
  'vVbqu',
  'dDhFH',
  'cvyae',
  'UiPna',
  'BOOL_Indicators',
  'iGWZP',
  'WuZLj',
  'IFsfk',
  'Active',
  'aNXxS',
  'AdhPM',
  'mXTvg',
  'yKfJA',
  'fCtjT',
  'Polygon',
  'uPzoV',
  'vaIJD',
  'None',
  'XbHpT',
  'RknoU',
  'JSmzc',
  'qtZKB',
  'FMVrT',
  'YWrQX',
]
;(function (_0x177733, _0x2c7210) {
  const _0x34dbf4 = function (_0x9f4180) {
    while (--_0x9f4180) {
      _0x177733['push'](_0x177733['shift']())
    }
  }
  _0x34dbf4(++_0x2c7210)
})(rt_0x2c72, 198)
const rt_0x34db = function (_0x177733, _0x2c7210) {
  _0x177733 = _0x177733 - 0
  var _0x34dbf4 = rt_0x2c72[_0x177733]
  return _0x34dbf4
}
const Config = {
  transformers: [
    {
      name: 'SimplifyTransformer',
      params: {},
    },
    {
      name: 'StringDecoderTransformer',
      params: {
        identifiers: [
          ['rt_0x1001', 0, rt_0x1001, 0],
          ['rt_0x9747', 0, rt_0x9747, 0],
          ['rt_0x317f', 0, rt_0x317f, 0],
          ['rt_0x34db', 0, rt_0x34db, 0],
        ], // TYPE_ONE
        findStringArrays: true,
      },
    },
    {
      name: 'LiteralMapTransformer',
      params: {},
    },
    {
      name: 'StringDecoderTransformer',
      params: {
        identifiers: [['PAC', 0, PAC, 3]],
      },
    },
    {
      name: 'SimplifyTransformer',
      params: {},
    },
    {
      name: 'ControlFlowTransformer',
      params: {},
    },
    {
      name: 'BufferCleanerTransformer',
      params: {},
    },
  ],
}

Config.transformers.forEach((cfgTransformer, index) => {
  let clazz = Transformers.find((tf) => tf.name === cfgTransformer.name)
  if (!clazz)
    throw new Error(`Transformer "${cfgTransformer.name}" does not exist`)
  Config.transformers[index] = new clazz(cfgTransformer.params)
})

async function main(file) {
  let inputPath = file,
    outputPath = file.slice(0, -2) + 'cleaned' + '.js'
  const input = fs.readFileSync(inputPath, 'utf8'),
    ast = acorn.parse(input, { ecmaVersion: 'latest' })

  await Promise.all(
    Config.transformers.map(async (transformer, index) => {
      console.log(
        `(${chalk.magenta((index + 1).toString())}/${chalk.magenta(
          Config.transformers.length
        )})`,
        'executing',
        chalk.yellow(transformer.name)
      )
      await transformer.run(ast, input)
    })
  )

  fs.writeFileSync(outputPath, escodegen.generate(ast), 'utf8')
  console.log('Wrote output to', outputPath)
}

require('yargs')
  .scriptName('synchrony')
  .usage('$0 <file>')
  .command(
    ['deobfuscate <file>', '$0 <file>'],
    'Deobfuscates a file',
    () => {},
    (args) => {
      let file = path.resolve(args.file)
      let now = performance.now()
      main(file)
        .then(() => {
          let complete = performance.now()
          let time = complete - now
          console.log(`Deobfuscation complete in ${prettyMilliseconds(time)}`)
        })
        .catch((err) => {
          console.error('Deobfuscation failed', err)
        })
    }
  ).argv
//main()
